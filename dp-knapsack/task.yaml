accessible: true
author: ''
context: |-
    In the Knapsack problem, you are given :math:`n` objects each one with a given integer weight :math:`w_i` and value :math:`v_i`. You can take a subset of these objects such that the sum of their weights is at most a given capacity value :math:`C`. The goal is to maximize the total value of the selected items.

    **Example**

    Consider a knapsack with capacity 15 and 5 items with weights 12, 1, 4, 1, 2 and values 4, 2, 10, 1, 2 as show in the figure:

    .. figure:: dp-knapsack/knapsack.png

       Image source: wikipedia
environment: python3
evaluate: best
groups: false
limits:
    output: '2'
    memory: '100'
    time: '30'
name: DP - Knapsack
network_grading: false
problems:
    dp-knapsack-1:
        header: ''
        type: code-file
        name: Knapsack
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
