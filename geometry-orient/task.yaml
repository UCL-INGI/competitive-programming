accessible: false
author: ''
context: |-
    One of the most important computational geometry primitives is the orientation of :math:`3` points.

    Let :math:`A, B, C` be :math:`3` points on the plane that form a triangle. Imagine that we travel on the triangle formed by them going from :math:`A` to :math:`B`, then to :math:`C` and finaly back to :math:`A`.

    We would like to know whether we are traveling in a clockwise fashon of counter-clockwise. The following figure illustrates these two cases:

    |

    .. image:: geometry-orient/orient.png

    |

    It turns out that there is a very simple way to compute this.
environment: dafny
evaluate: best
groups: false
input_random: '0'
limits:
    time: '30'
    output: '2'
    memory: '100'
name: Geometry 2D - Point orientation
network_grading: false
problems: {}
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags: {}
weight: 1.0
order: 1
