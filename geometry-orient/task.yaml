accessible: false
author: ''
context: |
    One of the main uses of cross product is in determining the relative position of points and other objects. For this, we define the function :math:`orient(A, B, C) = \vec{AB} \times \vec{AC}`. It is positive if :math:`C` is on the left side of :math:`\vec{AB}`, negative on the right side, and zero if :math:`C` is on the line containing :math:`\vec{AB}`.

    |

    .. image:: geometry-orient/products5.png

    |

    It is straightforward to implement:

    .. code:: java

        // create the vector from point a to point b
        static Point vec(Point a, Point b) {
            return new Point(b.x - a.x, b.y - a.y);
        }

         static double orient(Point a, Point b, Point c) {
            return cross(vec(a, b), vec(a, c);
        }
environment: dafny
evaluate: best
groups: false
input_random: '0'
limits:
    time: '30'
    output: '2'
    memory: '100'
name: Geometry - Point orientation
network_grading: false
order: 38
problems:
    file:
        type: file
        name: Point in angle
        header: |-
            As an example of use, suppose we want to check whether a point :math:`P` lies in the angle formed by two semi-lines AB and AC.

            For instance, in the following figure, in the first two cases the point :math:`P` does not lie inside the angle and in the last case it does.

            .. image:: geometry-orient/products7.png

            |

            **Note:** Do not make any assumptions on the orientation of the input points :math:`A`, :math:`B` and :math:`C`. However you can assume that they are not collinear.
        allowed_exts:
        - .java
        - .cpp
        - .py
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags: {}
weight: 1.0
