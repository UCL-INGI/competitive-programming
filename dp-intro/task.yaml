accessible: true
author: Aubry Fran√ßois
context: |
    In this task you will learn the basics of Dynamic Programming (DP for short).

    The *maximum sum subarray problem* is the following:

    Given an array :math:`a` of integers we want to find a subarray of :math:`a` such that the sum of its elements is as large as possible.

    For example:

    .. math::

      \begin{tabular}{| c | c | c | c | c | c | c | c |}
      \hline
      -2 & -3 & 4 & 1 & -2 & 1 & 5 & -3
      \hline
      \end{tabular}
environment: python3
evaluate: best
groups: false
limits:
    output: '2'
    memory: '100'
    time: '30'
name: Dynamic Programming - Introduction
network_grading: false
problems:
    dp1-maxarraysum-1:
        allowed_exts:
        - .java
        header: ''
        name: Maximum sum subarray sum ending at
        type: code-file
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
