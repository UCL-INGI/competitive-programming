accessible: true
author: Fran√ßois Aubry
context: |-
    Dynamic Programming (DP for short) is a fundamental technique in the development of efficient algorithms.

    Mastering this technique will allow you to solve a lot of problem that seem intractable at first and is a necessary condition in order to be a successful algorithmist.

    We will start by studying the Knapsack problem and use it to illustrate several aspects of DP, namely:

    - Top-down DP vs Bottom-up DP
    - The DP state graph
    - Reconstructing the solution
    - DP memory reduction
    - DP state reformulation
environment: python3
evaluate: best
groups: false
input_random: '0'
limits:
    output: '2'
    time: '30'
    memory: '100'
name: DP - Introduction
network_grading: false
order: 19
problems:
    read:
        header: ''
        choices:
        -   valid: true
            text: 'Yes'
        limit: 0
        centralize: true
        type: multiple_choice
        name: Mark this section as read?
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags: {}
weight: 1.0
